"use strict";(window["webpackJsonpPluginswag-pay-pal"]=window["webpackJsonpPluginswag-pay-pal"]||[]).push([[43],{1043:function(e,t,s){s.r(t);let i=Shopware.Classes.ApiService;var a=class extends i{constructor(e,t,s="paypal"){super(e,t,s)}validateApiCredentials(e,t,s){let a=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/validate-api-credentials`,{params:{clientId:e,clientSecret:t,sandboxActive:s},headers:a}).then(e=>i.handleResponse(e))}getApiCredentials(e,t,s,a,n={},r={}){let h=this.getBasicHeaders(r);return this.httpClient.post(`_action/${this.getApiBasePath()}/get-api-credentials`,{authCode:e,sharedId:t,nonce:s,sandboxActive:a},{params:n,headers:h}).then(e=>i.handleResponse(e))}getMerchantInformation(e=null){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/merchant-information`,{params:{salesChannelId:e},headers:t}).then(e=>i.handleResponse(e))}};let n=Shopware.Classes.ApiService;var r=class extends n{constructor(e,t,s="paypal/pos"){super(e,t,s)}validateApiCredentials(e,t=null){let s=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/validate-api-credentials`,{apiKey:e,salesChannelId:t},{headers:s}).then(e=>n.handleResponse(e))}fetchInformation(e,t=!1){let s=this.getBasicHeaders(),i=e.extensions.paypalPosSalesChannel.apiKey;return this.httpClient.post(`${this.getApiBasePath()}/fetch-information`,{apiKey:i},{headers:s}).then(s=>{let i=n.handleResponse(s);return delete i.extensions,null!==i.languageId&&(null===e.id||t)?(e.languages.length=0,e.languages.push({id:i.languageId})):delete i.languageId,Object.assign(e,i),e.currencies.length=0,e.currencies.push({id:i.currencyId}),e.countries.length=0,e.countries.push({id:i.countryId}),i})}cloneProductVisibility(e,t){let s=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/clone-product-visibility`,{fromSalesChannelId:e,toSalesChannelId:t},{headers:s}).then(e=>n.handleResponse(e))}getProductCount(e,t){let s=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/product-count`,{params:{salesChannelId:e,cloneSalesChannelId:t},headers:s}).then(e=>n.handleResponse(e))}generateApiUrl(){return"https://my.izettle.com/apps/api-keys?name=Shopware%20integration&scopes=READ:PURCHASE%20READ:FINANCE%20READ:USERINFO%20READ:PRODUCT%20WRITE:PRODUCT&utm_source=local_partnership&utm_medium=ecommerce&utm_campaign=shopware"}};let h=Shopware.Classes.ApiService;var o=class extends h{constructor(e,t,s="paypal/pos"){super(e,t,s),this.basicConfig={timeout:3e5}}startCompleteSync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/${e}`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}startProductSync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/${e}/products`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}startInventorySync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/${e}/inventory`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}startImageSync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/${e}/images`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}startLogCleanup(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/log/cleanup/${e}`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}abortSync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/abort/${e}`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}resetSync(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/sync/reset/${e}`,null,{...this.basicConfig,headers:t}).then(e=>h.handleResponse(e))}getProductLog(e,t=1,s=10){let i=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/product-log/${e}`,{...this.basicConfig,headers:i,params:{page:t,limit:s}}).then(e=>h.handleResponse(e))}};let p=Shopware.Classes.ApiService;var l=class extends p{constructor(e,t,s="paypal/pos"){super(e,t,s)}registerWebhook(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/webhook/registration/${e}`,{},{headers:t}).then(e=>p.handleResponse(e))}unregisterWebhook(e){let t=this.getBasicHeaders();return this.httpClient.delete(`_action/${this.getApiBasePath()}/webhook/registration/${e}`,{},{headers:t}).then(e=>p.handleResponse(e))}};let c=Shopware.Classes.ApiService;class d extends c{constructor(e,t,s="paypal"){super(e,t,s)}register(e){let t=this.getBasicHeaders();return this.httpClient.post(`_action/${this.getApiBasePath()}/webhook/register/${e}`,{},{headers:t}).then(e=>c.handleResponse(e))}unregister(e){let t=this.getBasicHeaders();return this.httpClient.delete(`_action/${this.getApiBasePath()}/webhook/register/${e}`,{},{headers:t}).then(e=>c.handleResponse(e))}status(e){let t=this.getBasicHeaders();return this.httpClient.get(`_action/${this.getApiBasePath()}/webhook/status/${e}`,{},{headers:t}).then(e=>c.handleResponse(e))}}let g=Shopware.Classes.ApiService;var u=class extends g{constructor(e,t,s="paypal"){super(e,t,s)}getPaymentDetails(e,t){let s=`${this.getApiBasePath()}/payment-details/${e}/${t}`;return this.httpClient.get(s,{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}capturePayment(e,t,s,i,a,n){let r=`_action/${this.getApiBasePath()}/capture-payment/${t}/${s}/${e}`;return this.httpClient.post(r,{captureAmount:i,currency:a,captureIsFinal:n},{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}refundPayment(e,t,s,i,a,n,r,h){let o=`_action/${this.getApiBasePath()}/refund-payment/${t}/${s}/${e}`;return this.httpClient.post(o,{refundAmount:i,currency:a,description:n,reason:r,refundInvoiceNumber:h},{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}voidPayment(e,t,s){let i=`_action/${this.getApiBasePath()}/void-payment/${t}/${s}/${e}`;return this.httpClient.post(i,{},{headers:this.getBasicHeaders()}).then(e=>g.handleResponse(e))}};let P=Shopware.Classes.ApiService;var C=class extends P{constructor(e,t,s="paypal-v2"){super(e,t,s)}getOrderDetails(e,t){let s=`${this.getApiBasePath()}/order/${e}/${t}`;return this.httpClient.get(s,this.getDefaultOptions()).then(e=>P.handleResponse(e))}refundCapture(e,t,s,i,a,n,r,h){let o=`/${e}/${t}/${s}`,p=`${this.getApiBasePath("","_action")}/refund-capture${o}`;return this.doPostRequest(p,h,{currency:i,amount:a,invoiceNumber:n,noteToPayer:r})}captureAuthorization(e,t,s,i,a,n,r,h){let o=`/${e}/${t}`,p=`${this.getApiBasePath("","_action")}/capture-authorization${o}`;return this.doPostRequest(p,r,{currency:s,amount:i,invoiceNumber:a,noteToPayer:n,isFinal:h})}voidAuthorization(e,t,s){let i=`/${e}/${t}`,a=`${this.getApiBasePath("","_action")}/void-authorization${i}`;return this.doPostRequest(a,s)}doPostRequest(e,t,s={}){let i={partnerAttributionId:t,...s};return this.httpClient.post(e,i,this.getDefaultOptions()).then(e=>P.handleResponse(e))}getDefaultOptions(){return{headers:this.getBasicHeaders(),version:Shopware.Context.api.apiVersion}}};let S=Shopware.Classes.ApiService;var v=class extends S{constructor(e,t,s="paypal"){super(e,t,s)}setDefaultPaymentForSalesChannel(e=null){let t=`_action/${this.getApiBasePath()}/saleschannel-default`;return this.httpClient.post(t,{salesChannelId:e},{headers:this.getBasicHeaders()}).then(e=>S.handleResponse(e))}};let $=Shopware.Classes.ApiService;var B=class extends ${constructor(e,t,s="paypal/dispute"){super(e,t,s)}list(e=null,t=null){let s=this.getBasicHeaders();return this.httpClient.get(this.getApiBasePath(),{params:{salesChannelId:e,disputeStateFilter:t},headers:s,version:Shopware.Context.api.apiVersion}).then(e=>$.handleResponse(e))}detail(e,t){let s=this.getBasicHeaders();return this.httpClient.get(`${this.getApiBasePath()}/${e}`,{params:{salesChannelId:t},headers:s,version:Shopware.Context.api.apiVersion}).then(e=>$.handleResponse(e))}};let{Application:A}=Shopware,y=A.getContainer("init");A.addServiceProvider("SwagPayPalApiCredentialsService",e=>new a(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalPosSettingApiService",e=>new r(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalPosApiService",e=>new o(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalPosWebhookRegisterService",e=>new l(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalWebhookService",e=>new d(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalPaymentService",e=>new u(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalOrderService",e=>new C(y.httpClient,e.loginService)),A.addServiceProvider("SwagPaypalPaymentMethodService",e=>new v(y.httpClient,e.loginService)),A.addServiceProvider("SwagPayPalDisputeApiService",e=>new B(y.httpClient,e.loginService))}}]);